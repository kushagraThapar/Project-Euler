package com.problems;

/**
 * Created by kushagrathapar on 1/29/16.
 */


import java.util.Scanner;

/**
 * Problem-2
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 */

public class Problem2 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int testCases = sc.nextInt();
        long num;
        for(int i = 0; i < testCases; i++) {
            num = sc.nextLong();
            System.out.println(calculateSum(num));
        }
    }

    public static long calculateSum(long num) {
        long startTime = System.nanoTime();
        long firstTerm = 0, secondTerm = 2, nextTerm = 4 * secondTerm + firstTerm;
        long sum = secondTerm;
        while (nextTerm < num) {
            sum = sum + nextTerm;
            firstTerm = secondTerm;
            secondTerm = nextTerm;
            nextTerm = 4 * secondTerm + firstTerm;
        }
        long elapsedTime = System.nanoTime() - startTime;
        System.out.println("Elapsed time in nano seconds is [" + elapsedTime + "]");
        return sum;
    }
}
